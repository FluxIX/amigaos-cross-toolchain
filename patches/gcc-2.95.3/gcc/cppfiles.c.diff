--- gcc-2.95.3/gcc/cppfiles.c	Mon May 10 17:24:33 1999
+++ gcc/gcc/cppfiles.c	Thu Sep 27 19:35:54 2001
@@ -56,13 +56,18 @@
    VMS has non-numeric inodes. */
 #ifdef VMS
 #define INO_T_EQ(a, b) (!bcmp((char *) &(a), (char *) &(b), sizeof (a)))
-#elif (defined _WIN32 && !defined CYGWIN && ! defined (_UWIN)) \
-       || defined __MSDOS__
+#elif (defined (_WIN32) && !defined (CYGWIN) && ! defined (_UWIN)) \
+       || defined (__MSDOS__) || defined (__amigaos__)
 #define INO_T_EQ(a, b) 0
 #else
 #define INO_T_EQ(a, b) ((a) == (b))
 #endif
 
+#ifndef OPEN_CASE_SENSITIVE
+/* Default is standard open() */
+#define OPEN_CASE_SENSITIVE open
+#endif
+
 /* Merge the four include chains together in the order quote, bracket,
    system, after.  Remove duplicate dirs (as determined by
    INO_T_EQ()).  The system_include and after_include chains are never
@@ -318,7 +323,12 @@
   
   ih = include_hash (pfile, fname, 1);
   jh = redundant_include_p (pfile, ih,
-			    fname[0] == '/' ? ABSOLUTE_PATH : search_start);
+#ifdef FILE_NAME_ABSOLUTE_P
+			    FILE_NAME_ABSOLUTE_P (fname)
+#else
+			    fname[0] == '/'
+#endif
+			    ? ABSOLUTE_PATH : search_start);
 
   if (jh != 0)
     {
@@ -328,7 +338,7 @@
       if (jh == (struct include_hash *)-1)
 	return -2;
       else
-	return open (jh->name, O_RDONLY, 0666);
+	return OPEN_CASE_SENSITIVE (jh->name, O_RDONLY, 0666);
     }
 
   if (ih->foundhere)
@@ -354,11 +364,15 @@
   ih->control_macro = NULL;
   
   /* If the pathname is absolute, just open it. */ 
+#ifdef FILE_NAME_ABSOLUTE_P
+  if (FILE_NAME_ABSOLUTE_P (fname))
+#else
   if (fname[0] == '/')
+#endif
     {
       ih->foundhere = ABSOLUTE_PATH;
       ih->name = ih->nshort;
-      return open (ih->name, O_RDONLY, 0666);
+      return OPEN_CASE_SENSITIVE (ih->name, O_RDONLY, 0666);
     }
 
   /* Search directory path, trying to open the file. */
@@ -369,13 +383,20 @@
   for (l = search_start; l; l = l->next)
     {
       bcopy (l->name, name, l->nlen);
+#ifdef VOL_SEPARATOR
+      if (name[l->nlen - 1] == VOL_SEPARATOR)
+	strcpy (&name[l->nlen], fname);
+      else
+#endif
+	{
       name[l->nlen] = '/';
       strcpy (&name[l->nlen+1], fname);
+	}
       simplify_pathname (name);
       if (CPP_OPTIONS (pfile)->remap)
 	name = remap_filename (pfile, name, l);
 
-      f = open (name, O_RDONLY|O_NONBLOCK|O_NOCTTY, 0666);
+      f = OPEN_CASE_SENSITIVE (name, O_RDONLY|O_NONBLOCK|O_NOCTTY, 0666);
 #ifdef EACCES
       if (f == -1 && errno == EACCES)
 	{
@@ -723,6 +744,18 @@
   
   dir = xstrdup (fname);
   last_slash = rindex (dir, '/');
+
+#ifdef VOL_SEPARATOR
+  {
+    char *last_sep;
+    last_sep = rindex (dir, VOL_SEPARATOR);
+    if (last_sep)
+      last_sep++; /* Keep VOL_SEPARATOR.  */
+    if (last_sep > last_slash)
+      last_slash = last_sep;
+  }
+#endif
+
   if (last_slash)
     {
       if (last_slash == dir)
