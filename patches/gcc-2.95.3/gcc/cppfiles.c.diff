--- gcc-2.95.3/gcc/cppfiles.c	1999-05-10 17:24:33.000000000 +0200
+++ gcc-2.95.3/gcc/cppfiles.c	2012-08-04 11:53:28.000000000 +0200
@@ -52,12 +52,12 @@
 static void hack_vms_include_specification PROTO ((char *));
 #endif
 
-/* Windows does not natively support inodes, and neither does MSDOS.
+/* Windows does not natively support inodes, and neither does MSDOS or AmigaOS.
    VMS has non-numeric inodes. */
 #ifdef VMS
 #define INO_T_EQ(a, b) (!bcmp((char *) &(a), (char *) &(b), sizeof (a)))
 #elif (defined _WIN32 && !defined CYGWIN && ! defined (_UWIN)) \
-       || defined __MSDOS__
+       || defined __MSDOS__ || defined __amigaos__
 #define INO_T_EQ(a, b) 0
 #else
 #define INO_T_EQ(a, b) ((a) == (b))
@@ -318,7 +318,12 @@
   
   ih = include_hash (pfile, fname, 1);
   jh = redundant_include_p (pfile, ih,
-			    fname[0] == '/' ? ABSOLUTE_PATH : search_start);
+#ifdef FILE_NAME_ABSOLUTE_P
+			    FILE_NAME_ABSOLUTE_P (fname)
+#else
+			    fname[0] == '/'
+#endif
+			    ? ABSOLUTE_PATH : search_start);
 
   if (jh != 0)
     {
@@ -354,7 +359,11 @@
   ih->control_macro = NULL;
   
   /* If the pathname is absolute, just open it. */ 
+#ifdef FILE_NAME_ABSOLUTE_P
+  if (FILE_NAME_ABSOLUTE_P (fname))
+#else
   if (fname[0] == '/')
+#endif
     {
       ih->foundhere = ABSOLUTE_PATH;
       ih->name = ih->nshort;
@@ -369,8 +378,15 @@
   for (l = search_start; l; l = l->next)
     {
       bcopy (l->name, name, l->nlen);
-      name[l->nlen] = '/';
-      strcpy (&name[l->nlen+1], fname);
+#ifdef VOL_SEPARATOR
+      if (name[l->nlen - 1] == VOL_SEPARATOR)
+	strcpy (&name[l->nlen], fname);
+      else
+#endif
+	{
+	  name[l->nlen] = '/';
+	  strcpy (&name[l->nlen+1], fname);
+	}
       simplify_pathname (name);
       if (CPP_OPTIONS (pfile)->remap)
 	name = remap_filename (pfile, name, l);
@@ -723,6 +739,18 @@
   
   dir = xstrdup (fname);
   last_slash = rindex (dir, '/');
+
+#ifdef VOL_SEPARATOR
+  {
+    char *last_sep;
+    last_sep = rindex (dir, VOL_SEPARATOR);
+    if (last_sep)
+      last_sep++; /* Keep VOL_SEPARATOR.  */
+    if (last_sep > last_slash)
+      last_slash = last_sep;
+  }
+#endif
+
   if (last_slash)
     {
       if (last_slash == dir)
