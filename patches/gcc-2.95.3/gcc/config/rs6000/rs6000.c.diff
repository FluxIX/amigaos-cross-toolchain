--- gcc-2.95.3/gcc/config/rs6000/rs6000.c	Thu Jan 25 15:03:34 2001
+++ gcc/gcc/config/rs6000/rs6000.c	Thu Sep 27 19:35:54 2001
@@ -405,6 +405,7 @@
 	case SDATA_DATA: fprintf (file, "%s -msdata=data", start); start = ""; break;
 	case SDATA_SYSV: fprintf (file, "%s -msdata=sysv", start); start = ""; break;
 	case SDATA_EABI: fprintf (file, "%s -msdata=eabi", start); start = ""; break;
+	case SDATA_BREL: fprintf (file, "%s -msdata=baserel", start); start = ""; break;
 	}
 
       if (rs6000_sdata && g_switch_value)
@@ -1278,7 +1279,7 @@
 #if TARGET_ELF
   rtx sym_ref, const_part;
 
-  if (rs6000_sdata == SDATA_NONE || rs6000_sdata == SDATA_DATA)
+  if (rs6000_sdata == SDATA_NONE || rs6000_sdata == SDATA_DATA || rs6000_sdata == SDATA_BREL)
     return 0;
 
   if (DEFAULT_ABI != ABI_V4 && DEFAULT_ABI != ABI_SOLARIS)
@@ -1317,6 +1318,44 @@
 #endif
 }
 
+/* Return 1 for an operand in data memory on V.4/eabi */
+
+int
+baserel_data_operand (op, mode)
+     rtx op ATTRIBUTE_UNUSED;
+     enum machine_mode mode ATTRIBUTE_UNUSED;
+{
+#if TARGET_ELF
+  rtx sym_ref, const_part;
+
+  if (rs6000_sdata != SDATA_BREL)
+    return 0;
+
+  if (DEFAULT_ABI != ABI_V4 && DEFAULT_ABI != ABI_SOLARIS)
+    return 0;
+
+  if (GET_CODE (op) == SYMBOL_REF)
+    sym_ref = op;
+
+  else if (GET_CODE (op) != CONST
+	   || GET_CODE (XEXP (op, 0)) != PLUS
+	   || GET_CODE (XEXP (XEXP (op, 0), 0)) != SYMBOL_REF
+	   || GET_CODE (XEXP (XEXP (op, 0), 1)) != CONST_INT)
+    return 0;
+
+  else
+    sym_ref = XEXP (XEXP (op, 0), 0);
+
+  if (*XSTR (sym_ref, 0) != '@')
+    return 0;
+
+  return 1;
+
+#else
+  return 0;
+#endif
+}
+
 
 /* Initialize a variable CUM of type CUMULATIVE_ARGS
    for a call to a function whose data type is FNTYPE.
@@ -3388,6 +3427,9 @@
 	   && GET_CODE (XEXP (x, 0)) == REG && CONSTANT_P (XEXP (x, 1)))
     {
       output_addr_const (file, XEXP (x, 1));
+      if (baserel_data_operand(XEXP (x, 1)))
+	fprintf (file, "@drell(%s)", reg_names[ REGNO (XEXP (x, 0)) ]);
+      else
       fprintf (file, "@l(%s)", reg_names[ REGNO (XEXP (x, 0)) ]);
     }
   else
@@ -3739,6 +3781,10 @@
 				  + info_ptr->toc_size
 				  + info_ptr->main_size, 8);
 
+#ifdef EXTRA_STACK_INFO
+  EXTRA_STACK_INFO
+#endif
+
   /* Calculate the offsets */
   switch (abi)
     {
@@ -4265,6 +4311,10 @@
 	asm_fprintf (file, "\tmtlr %s\n", reg_names[0]);
     }
 
+#ifdef EXTRA_PROLOG
+  EXTRA_PROLOG
+#endif
+
   /* NT needs us to probe the stack frame every 4k pages for large frames, so
      do it here.  */
   if (DEFAULT_ABI == ABI_NT && info->total_size > 4096)
@@ -4377,6 +4427,10 @@
       rs6000_output_load_toc_table (file, 30);
     }
 
+#ifdef EXTRA_PROLOG_END
+  EXTRA_PROLOG_END
+#endif
+
   if (DEFAULT_ABI == ABI_NT)
     {
       assemble_name (file, XSTR (XEXP (DECL_RTL (current_function_decl), 0), 0));
@@ -4437,6 +4491,10 @@
       if (info->lr_save_p)
 	asm_fprintf (file, "\tmtlr %s\n", reg_names[0]);
 
+#ifdef EXTRA_EPILOG
+      EXTRA_EPILOG
+#endif
+
       /* Restore gpr's.  */
       if (! TARGET_MULTIPLE || info->first_gp_reg_save == 31 || TARGET_64BIT)
 	{
@@ -5858,7 +5916,7 @@
 	}
       else
 	{
-	  if (rs6000_sdata != SDATA_NONE && (size > 0) && (size <= g_switch_value))
+	  if (rs6000_sdata != SDATA_NONE && rs6000_sdata != SDATA_BREL && (size > 0) && (size <= g_switch_value))
 	    {
 	      if (rs6000_sdata == SDATA_EABI)
 		sdata2_section ();
@@ -5924,9 +5982,16 @@
 	    abort ();
 	}
 
-      if ((size > 0 && size <= g_switch_value)
+      if ((!name 
+	   && (!TREE_READONLY (decl) || TREE_THIS_VOLATILE(decl))
+	   && (g_switch_value > 0xffff || (size > 0 && size <= g_switch_value)
+	       || rs6000_sdata == SDATA_BREL))  
 	  || (name
-	      && ((len == sizeof (".sdata")-1 && strcmp (name, ".sdata") == 0)
+	      && ((rs6000_sdata == SDATA_BREL 
+		   && ((len == sizeof (".data") && strcmp (name, ".data") == 0)
+		       || (len == sizeof (".data1") && strcmp (name, ".data1") == 0)
+		       || (len == sizeof (".bss") && strcmp (name, ".bss") == 0))) 
+		  || (len == sizeof (".sdata")-1 && strcmp (name, ".sdata") == 0)
 		  || (len == sizeof (".sdata2")-1 && strcmp (name, ".sdata2") == 0)
 		  || (len == sizeof (".sbss")-1 && strcmp (name, ".sbss") == 0)
 		  || (len == sizeof (".sbss2")-1 && strcmp (name, ".sbss2") == 0)
