--- binutils-2.9.1/gas/tc.h	1998-05-01 08:45:17.000000000 -0700
+++ binutils-2.9.1/gas/tc.h	2012-02-17 18:46:26.316177981 -0800
@@ -23,25 +23,6 @@
 
 extern const pseudo_typeS md_pseudo_table[];
 
-/* JF moved this here from as.h under the theory that nobody except MACHINE.c
-   and write.c care about it anyway. */
-
-struct relax_type
-{
-  /* Forward reach. Signed number. > 0. */
-  long rlx_forward;
-  /* Backward reach. Signed number. < 0. */
-  long rlx_backward;
-
-  /* Bytes length of this address. */
-  unsigned char rlx_length;
-
-  /* Next longer relax-state.  0 means there is no 'next' relax-state. */
-  relax_substateT rlx_more;
-};
-
-typedef struct relax_type relax_typeS;
-
 extern const int md_reloc_size;	/* Size of a relocation record */
 
 char *md_atof PARAMS ((int what_statement_type, char *literalP, int *sizeP));
--- binutils-2.9.1/gas/as.h	1998-05-01 08:45:05.000000000 -0700
+++ binutils-2.9.1/gas/as.h	2012-02-17 18:46:36.471732667 -0800
@@ -595,6 +595,22 @@
 
 #include "expr.h"		/* Before targ-*.h */
 
+struct relax_type
+{
+  /* Forward reach. Signed number. > 0. */
+  long rlx_forward;
+  /* Backward reach. Signed number. < 0. */
+  long rlx_backward;
+
+  /* Bytes length of this address. */
+  unsigned char rlx_length;
+
+  /* Next longer relax-state.  0 means there is no 'next' relax-state. */
+  relax_substateT rlx_more;
+};
+
+typedef struct relax_type relax_typeS;
+
 /* this one starts the chain of target dependant headers */
 #include "targ-env.h"
 
--- binutils-2.9.1/libiberty/cplus-dem.c	1998-05-01 08:47:50.000000000 -0700
+++ binutils-2.9.1/libiberty/cplus-dem.c	2012-02-17 18:30:32.069972111 -0800
@@ -31,6 +31,7 @@
 #include <ctype.h>
 #include <string.h>
 #include <stdio.h>
+#include <stdlib.h>
 
 #include <demangle.h>
 #undef CURRENT_DEMANGLING_STYLE
@@ -3266,9 +3267,6 @@
   exit (1);
 }
 
-char * malloc ();
-char * realloc ();
-
 char *
 xmalloc (size)
      unsigned size;
--- binutils-2.9.1/libiberty/strerror.c	2012-02-17 20:46:45.643806527 -0800
+++ binutils-2.9.1/libiberty/strerror.c	2012-02-17 20:49:54.372029811 -0800
@@ -7,6 +7,8 @@
 
 #include "config.h"
 
+#undef NEED_sys_errlist
+
 #ifndef NEED_sys_errlist
 /* Note that errno.h (not sure what OS) or stdio.h (BSD 4.4, at least)
    might declare sys_errlist in a way that the compiler might consider
@@ -463,7 +464,11 @@
 #else
 
-extern int sys_nerr;
-extern char *sys_errlist[];
+#ifdef __APPLE__
+extern const int sys_nerr;
+#else
+extern int sys_nerr;
+#endif
+extern const char *const sys_errlist[];
 
 #endif
 
--- binutils-2.9.1/libiberty/functions.def	1998-05-01 08:47:51.000000000 -0700
+++ binutils-2.9.1/libiberty/functions.def	2011-05-08 21:11:21.433862430 -0700
@@ -11,14 +11,14 @@
 
 DEF(asprintf, int, (), NOTHING)
 DEF(atexit, int, (f), void (*f)())
-DEF(bcmp, int, (s1, s2, length), char *s1 AND char *s2 AND int length )
-DEF(bcopy, void, (s1, s2, length), char *s1 AND char *s2 AND int length )
-DEF(bzero, void, (s, length), char *s AND int length)
+DEF(bcmp, int, (s1, s2, length), CONST void *s1 AND CONST void *s2 AND size_t length )
+DEF(bcopy, void, (s1, s2, length), CONST void *s1 AND void *s2 AND size_t length )
+DEF(bzero, void, (s, length), void *s AND size_t length)
 DEF(clock, clock_t, (), NOTHING)
 DEF(getopt, int, (argc, argv, optstring),
 	int argc AND char **argv AND CONST char *optstring)	
 DEF(getpagesize, int , (), NOTHING)
 DEF(getcwd, char*, (buf, len), char *buf AND int len)
-DEF(index, char*, (s, c), char *s AND int c)
+DEF(index, char*, (s, c), CONST char *s AND int c)
 DEF(insque, void, (), NOTHING)
 DEF(memchr, PTR, (s, c, length), CONST PTR s AND int c AND size_t length)
@@ -30,20 +30,20 @@
 DEF(random, long int, (), NOTHING)
 DEF(rename, int, (f, t), char *f AND char *t)
-DEF(rindex, char*, (s, c), char *s AND int c)
+DEF(rindex, char*, (s, c), CONST char *s AND int c)
-DEF(strcasecmp, int, (s1, s2), char *s1 AND char *s2)
+DEF(strcasecmp, int, (s1, s2), CONST char *s1 AND CONST char *s2)
-DEF(strncasecmp, int, (s1, s2, n), char *s1 AND char *s2 AND int n)
+DEF(strncasecmp, int, (s1, s2, n), CONST char *s1 AND CONST char *s2 AND size_t n)
 DEF(strchr, char*, (s, c), CONST char *s AND int c)
 DEF(strdup, char*, (s1), char * s1)
 DEF(strrchr, char*, (s, c), CONST char *s AND int c)
-DEF(strstr, char*, (), NOTHING)
+DEF(strstr, char*, (h, n), CONST char *h AND CONST char *n)
-DEF(strtod, double, (), NOTHING)
+DEF(strtod, double, (nptr, endptr), CONST char *nptr AND char **endptr)
-DEF(strtol, long, (), NOTHING)
+DEF(strtol, long int, (nptr, endptr, base), CONST char *nptr AND char **endptr AND int base)
-DEF(strtoul, unsigned long, (), NOTHING)
+DEF(strtoul, unsigned long int, (nptr, endptr, base), CONST char *nptr AND char **endptr AND int base)
 DEF(tmpnam, char *, (s), char * s)
 DEF(vfork, int, (), NOTHING)
-DEF(vfprintf, int, (), NOTHING)
-DEF(vprintf, int, (), NOTHING)
-DEF(vsprintf, int, (), NOTHING)
+DEF(vfprintf, int, (s, f, a), void *s AND CONST char *f AND void *a)
+DEF(vprintf, int, (f, a), CONST char *f AND void *a)
+DEF(vsprintf, int, (s, f, a), char *s AND char *f AND void *a)
 DEF(sigsetmask, int, (), NOTHING)
 DEF(alloca, PTR, (size), size_t size)
 DEF(waitpid, int, (pid, statp, opts), int pid AND int* statp AND int opts )
@@ -66,5 +66,5 @@
 DEFFUNC(strerror, char*, (errnoval), int errnoval)
 DEFFUNC(psignal, void, (signo, message), unsigned signo AND char *message)
 DEFFUNC(basename, char *, (name), CONST char *name)
-DEFFUNC(on_exit, void, (f, arg), void (*f)() AND char *arg)
+DEFFUNC(on_exit, int, (f, arg), void (*f)(int, void *) AND void *arg)
-DEFFUNC(strsignal, const char *, (signo), int signo)
+DEFFUNC(strsignal, char *, (signo), int signo)
--- binutils-2.9.1/include/libiberty.h	1998-05-01 08:48:25.000000000 -0700
+++ binutils-2.9.1/include/libiberty.h	2012-02-17 22:11:16.964827523 -0800
@@ -16,6 +16,9 @@
 
 #include "ansidecl.h"
 
+#include <string.h>
+#include <stdlib.h>
+
 /* Build an argument vector from a string.  Allocates memory using
    malloc.  Use freeargv to free the vector.  */
 
--- binutils-2.9.1/include/objalloc.h	1998-05-01 08:48:25.000000000 -0700
+++ binutils-2.9.1/include/objalloc.h	2012-02-17 22:11:11.409116969 -0800
@@ -21,6 +21,8 @@
 
 #include "ansidecl.h"
 
+#include <stdlib.h>
+
 /* These routines allocate space for an object.  The assumption is
    that the object will want to allocate space as it goes along, but
    will never want to free any particular block.  There is a function
--- binutils-2.9.1/libiberty/argv.c	2012-02-17 22:23:09.927783521 -0800
+++ binutils-2.9.1/libiberty/argv.c	2012-02-17 22:24:19.035714384 -0800
@@ -40,7 +40,6 @@
 extern void *malloc (size_t size);				/* 4.10.3.3 */
 extern void *realloc (void *ptr, size_t size);			/* 4.10.3.4 */
 extern void free (void *ptr);					/* 4.10.3.2 */
-extern char *strdup (const char *s);				/* Non-ANSI */
 
 #else	/* !__STDC__ */
 
